#!/bin/sh

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Make sure only root is running this script
if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root" 1>&2
  exit 1
fi

ARG0="$0"
PROGRAM="`basename $ARG0`"

cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*)
    cygwin=true
  ;;
  Darwin*)
    darwin=true
  ;;
esac

CATALINA_BASE=<%= _catalina_base %>
CATALINA_HOME=<%= _catalina_home %>
JAVA_HOME=<%= java_home %>
TOMCAT_USER=<%= user %>

# Use the maximum available, or set MAX_FD != -1 to use that
test ".$MAX_FD" = . && MAX_FD="maximum"
# Setup parameters for running the jsvc
#
test ".$TOMCAT_USER" = . && TOMCAT_USER=tomcat

JAVA_BIN="$JAVA_HOME/bin/java"

test ".$CATALINA_MAIN" = . && CATALINA_MAIN=org.apache.catalina.startup.Bootstrap
test ".$JSVC" = . && JSVC="$CATALINA_BASE/bin/jsvc"
## would be good to test the jsvc is from a valid common-daemon and for the correct java but how to do that

# Ensure that any user defined CLASSPATH variables are not used on startup,
# but allow them to be specified in setenv.sh, in rare case when it is needed.
CLASSPATH=
JAVA_OPTS=
if [ -r "$CATALINA_BASE/bin/setenv.sh" ]; then
  . "$CATALINA_BASE/bin/setenv.sh"
elif [ -r "$CATALINA_HOME/bin/setenv.sh" ]; then
  . "$CATALINA_HOME/bin/setenv.sh"
fi

## user set values are set now
echo CATALINA_BASE $CATALINA_BASE
echo CATALINA_HOME $CATALINA_HOME
echo CATALINA_LOCAL $CATALINA_LOCAL
echo -n CATALINA_OPTS
echo " $CATALINA_OPTS" | sed -e 's/ -/\n    -/g' | sort
echo -n JAVA_OPTS
echo " $JAVA_OPTS" | sed -e 's/ -/\n    -/g' | sort
echo TOMCAT_USER $TOMCAT_USER

# Add on extra jar files to CLASSPATH
test ".$CLASSPATH" != . && CLASSPATH="${CLASSPATH}:"
CLASSPATH="$CLASSPATH$CATALINA_HOME/bin/bootstrap.jar:$CATALINA_HOME/bin/commons-daemon.jar"

test ".$CATALINA_OUT" = . && CATALINA_OUT="$CATALINA_BASE/logs/catalina-daemon.out"
test ".$CATALINA_TMP" = . && CATALINA_TMP="$CATALINA_BASE/temp"

# Add tomcat-juli.jar to classpath
# tomcat-juli.jar can be over-ridden per instance
if [ -r "$CATALINA_BASE/bin/tomcat-juli.jar" ] ; then
  CLASSPATH="$CLASSPATH:$CATALINA_BASE/bin/tomcat-juli.jar"
else
  CLASSPATH="$CLASSPATH:$CATALINA_HOME/bin/tomcat-juli.jar"
fi
# Set juli LogManager config file if it is present and an override has not been issued
if [ -z "$LOGGING_CONFIG" ]; then
  if [ -r "$CATALINA_BASE/conf/logging.properties" ]; then
    LOGGING_CONFIG="-Djava.util.logging.config.file=$CATALINA_BASE/conf/logging.properties"
  else
    # Bugzilla 45585
    LOGGING_CONFIG="-Dnop"
  fi
fi

test ".$LOGGING_MANAGER" = . && LOGGING_MANAGER="-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager"
JAVA_OPTS="$JAVA_OPTS $LOGGING_MANAGER"

# Set -pidfile
test ".$CATALINA_PID" = . && CATALINA_PID="$CATALINA_BASE/logs/catalina-daemon.pid"

# Increase the maximum file descriptors if we can
if [ "$cygwin" = "false" ]; then
  MAX_FD_LIMIT=`ulimit -H -n`
  if [ "$?" -eq 0 ]; then
    # Darwin does not allow RLIMIT_INFINITY on file soft limit
    if [ "$darwin" = "true" -a "$MAX_FD_LIMIT" = "unlimited" ]; then
      MAX_FD_LIMIT=`/usr/sbin/sysctl -n kern.maxfilesperproc`
    fi
    test ".$MAX_FD" = ".maximum" && MAX_FD="$MAX_FD_LIMIT"
    ulimit -n $MAX_FD
    if [ "$?" -ne 0 ]; then
      echo "$PROGRAM: Could not set maximum file descriptor limit: $MAX_FD"
    fi
  else
    echo "$PROGRAM: Could not query system maximum file descriptor limit: $MAX_FD_LIMIT"
  fi
fi

JSVC_OPTS="$JSVC_OPTS -umask 0027"

do_start()
{
  "$JSVC" $JSVC_OPTS \
    -java-home "$JAVA_HOME" \
    -user "$TOMCAT_USER" \
    -pidfile "$CATALINA_PID" \
    -wait 10 \
    -outfile "SYSLOG" \
    -errfile "SYSLOG" \
    -classpath "$CLASSPATH" \
    "$LOGGING_CONFIG" $JAVA_OPTS $CATALINA_OPTS \
    -Dcatalina.base="$CATALINA_BASE" \
    -Dcatalina.home="$CATALINA_HOME" \
    -Djava.io.tmpdir="$CATALINA_TMP" \
    $CATALINA_MAIN
  #exit $?
}

do_status()
{
  [ ! -f "$CATALINA_PID" ] && exit 3
  [ "$(pgrep --list-name --pidfile "$CATALINA_PID")" != "$(cat $CATALINA_PID) jsvc" ] && exit 1
  exit 0
}

do_stop()
{
  "$JSVC" $JSVC_OPTS \
    -stop \
    -pidfile "$CATALINA_PID" \
    -classpath "$CLASSPATH" \
    -Dcatalina.base="$CATALINA_BASE" \
    -Dcatalina.home="$CATALINA_HOME" \
    -Djava.io.tmpdir="$CATALINA_TMP" \
    $CATALINA_MAIN
  #exit $?
}

do_version()
{
  "$JSVC" \
     -java-home "$JAVA_HOME" \
     -pidfile "$CATALINA_PID" \
     -classpath "$CLASSPATH" \
     -outfile "SYSLOG" \
     -errfile "SYSLOG" \
     -version \
     -check \
     $CATALINA_MAIN
  if [ "$?" = 0 ]; then
    "$JAVA_BIN" \
      -classpath "$CATALINA_HOME/lib/catalina.jar" \
      org.apache.catalina.util.ServerInfo
  fi
  exit $?
}

# ----- Execute The Requested Command -----------------------------------------
case "$1" in
  run )
    shift
      "$JSVC" $* \
      $JSVC_OPTS \
      -java-home "$JAVA_HOME" \
      -user "$TOMCAT_USER" \
      -pidfile "$CATALINA_PID" \
      -wait 10 \
      -nodetach \
      -outfile "&1" \
      -errfile "&2" \
      -classpath "$CLASSPATH" \
      "$LOGGING_CONFIG" $JAVA_OPTS $CATALINA_OPTS \
      -Dcatalina.base="$CATALINA_BASE" \
      -Dcatalina.home="$CATALINA_HOME" \
      -Djava.io.tmpdir="$CATALINA_TMP" \
      $CATALINA_MAIN
    exit $?
    ;;
  start )
    do_start
  ;;
  stop )
    do_stop
  ;;
  status )
    do_status
  ;;
  restart )
    do_stop
    do_start
  ;;
  version )
    do_version
  ;;
  * )
    echo "Unknown command: '$1'"
    echo "Usage: $PROGRAM ( commands ... )"
    echo "commands:"
    echo "  restart           Restart Catalina"
    echo "  run               Start Catalina without detaching from console"
    echo "  start             Start Catalina"
    echo "  status            Report if JSVC is running"
    echo "  stop              Stop Catalina"
    echo "  version           What version of commons daemon and Tomcat"
    echo "                    are you running?"
    exit 1
  ;;
esac
